name: Build and Test Unity Project

on: [push, pull_request]

jobs:
  test:
    name: Run Unity Tests (${{ matrix.testMode }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        testMode: [editmode, playmode]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: .
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.testMode }}-test-artifacts
          path: ${{ matrix.testMode }}-artifacts

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - StandaloneWindows

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Extract base version from latest tag
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0")
          COMMITS_SINCE_TAG=$(git rev-list ${TAG}..HEAD --count || echo "0")
          echo "VERSION=${TAG}.${COMMITS_SINCE_TAG}" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ env.VERSION }}
          path: build/${{ matrix.targetPlatform }}
